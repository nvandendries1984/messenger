<style>
    /* Aangepaste CSS-stijl voor chatberichten */
    .chat-container {
        width: 100%;
        margin: 0 auto;
        padding: 5px;
        background-color: #f5f5f5;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
    
    .chat-message {
        margin-bottom: 10px;
    }
    
    .chat-username {
        font-weight: bold;
        color: #007bff; /* Blauwe kleur voor de gebruikersnaam */
    }

    .chat-avatar {
        max-width: 32px;
        border-radius: 50px;
    }
</style>
    
<div class="container-fluid chat-container">
    <h3><img src="{{ user.avatar.path }}" alt="" class="chat-avatar"> Welcome {{ user.name }}</h3>
    <hr>
    <div id="chat-messages"></div>
    <div class="input-group">
        <input type="text" id="message-input" class="form-control" placeholder="Type your message here">
        <button id="send-button" class="btn btn-info">Send it...</button>
    </div>
    <p class="text-muted"><i style="font-size: x-small;">Please note: Messages are saved by your browser cache.</i></p>
</div>
    
<script>
    // Vervang dit met de daadwerkelijke gebruikersnaam van de ingelogde gebruiker
    const loggedInUserName = "{{ user.name }}";

    // Selecteer de elementen
    const chatContainer = document.querySelector('.chat-container');
    const messageInput = document.getElementById('message-input');
    const sendButton = document.getElementById('send-button');
    const chatMessages = document.getElementById('chat-messages');

    // Laad opgeslagen berichten bij het initialiseren van de chat
    loadMessagesFromStorage();

    // Event listener om een bericht te versturen wanneer op de knop wordt geklikt
    sendButton.addEventListener('click', () => {
        const message = messageInput.value;
        if (message.trim() !== '') {
            // Maak een nieuw berichtelement aan
            const messageElement = document.createElement('div');
            messageElement.className = 'chat-message';

            // Voeg de huidige tijd toe aan het bericht
            const currentTimeElement = document.createElement('span');
            currentTimeElement.className = 'chat-current-time';
            const currentTime = new Date();
            currentTimeElement.textContent = '(' + currentTime.toLocaleTimeString() + ') ';
            messageElement.appendChild(currentTimeElement);

            // Voeg de gebruikersnaam toe aan het bericht
            const usernameElement = document.createElement('span');
            usernameElement.className = 'chat-username';
            usernameElement.textContent = loggedInUserName;
            messageElement.appendChild(usernameElement);

            // Voeg het berichttekst toe aan het bericht
            const messageTextElement = document.createElement('span');
            messageTextElement.textContent = ': ' + message;
            messageElement.appendChild(messageTextElement);

            // Voeg het bericht toe aan de chatbox
            chatMessages.appendChild(messageElement);

            // Wis het invoerveld
            messageInput.value = '';

            // Sla het bericht op in de Local Storage
            saveMessageToStorage({
                username: loggedInUserName,
                time: currentTimeElement.textContent, // Gebruik de tekst van currentTimeElement
                message: message
            });
        }
    });

    // Event listener om een bericht te versturen wanneer Enter wordt ingedrukt
    messageInput.addEventListener('keyup', (event) => {
        if (event.key === 'Enter') {
            sendButton.click(); // Roep de klikfunctie van de knop aan
        }
    });

    // Functie om opgeslagen berichten te laden
    function loadMessagesFromStorage() {
        const storedMessages = JSON.parse(localStorage.getItem('chatMessages')) || [];
        
        storedMessages.forEach((message) => {
            // Maak een nieuw berichtelement aan met de geladen gegevens
            const messageElement = document.createElement('div');
            messageElement.className = 'chat-message';
            
            const currentTimeElement = document.createElement('span');
            currentTimeElement.className = 'chat-current-time';
            currentTimeElement.textContent = message.time;
            messageElement.appendChild(currentTimeElement);
            
            const usernameElement = document.createElement('span');
            usernameElement.className = 'chat-username';
            usernameElement.textContent = message.username;
            messageElement.appendChild(usernameElement);
            
            const messageTextElement = document.createElement('span');
            messageTextElement.textContent = ': ' + message.message;
            messageElement.appendChild(messageTextElement);
            
            chatMessages.appendChild(messageElement);
        });
    }

    // Functie om een bericht op te slaan in de Local Storage
    function saveMessageToStorage(message) {
        const storedMessages = JSON.parse(localStorage.getItem('chatMessages')) || [];
        storedMessages.push(message);
        localStorage.setItem('chatMessages', JSON.stringify(storedMessages));
    }
</script>
